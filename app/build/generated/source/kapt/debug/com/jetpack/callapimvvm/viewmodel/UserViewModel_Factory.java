// Generated by Dagger (https://dagger.dev).
package com.jetpack.callapimvvm.viewmodel;

import com.jetpack.callapimvvm.repository.UserRespository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserViewModel_Factory implements Factory<UserViewModel> {
  private final Provider<UserRespository> userRespositoryProvider;

  public UserViewModel_Factory(Provider<UserRespository> userRespositoryProvider) {
    this.userRespositoryProvider = userRespositoryProvider;
  }

  @Override
  public UserViewModel get() {
    return newInstance(userRespositoryProvider.get());
  }

  public static UserViewModel_Factory create(Provider<UserRespository> userRespositoryProvider) {
    return new UserViewModel_Factory(userRespositoryProvider);
  }

  public static UserViewModel newInstance(UserRespository userRespository) {
    return new UserViewModel(userRespository);
  }
}
